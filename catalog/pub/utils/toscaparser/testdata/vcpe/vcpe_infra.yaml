tosca_definitions_version: tosca_simple_yaml_1_0
metadata:
  template_name: vCPE_infra
  template_version: "1.0"
  template_author: onap
description: vCPE_infra

imports:
  - onap_dm.yaml

node_types:
  onap.vcpe_infra:
    derived_from: tosca.nodes.nfv.VNF
    properties:
      descriptor_id:
        type: string
        constraints: [ valid_values: [ b1bb0ce7-1111-4fa7-95ed-4840d70a1177 ] ]
        default: b1bb0ce7-1111-4fa7-95ed-4840d70a1177
      provider:
        type: string
        constraints: [ valid_values: [ onap ] ]
        default: onap
      product_name:
        type: string
        constraints: [ valid_values: [ vcpe_infra ] ]
        default: vcpe_infra
      software_version:
        type: string
        constraints: [ valid_values: [ '1.0' ] ]
        default: '1.0'
      descriptor_version:
        type: string
        constraints: [ valid_values: [ '1.0' ] ]
        default: '1.0'
      flavour_id:
        type: string
        constraints: [ valid_values: [ simple ] ]  #only one and only allowed one DF in this example
        default: simple
      flavour_description:
        type: string
        default: simple
      vnfm_info:
        type: list
        entry_schema:
          type: string
        default: ['gvnfm']

topology_template:
  substitution_mappings:
    node_type: onap.vcpe_infra
    requirements:
      virtual_link: [ Cp_vaaa_public, virtual_link ] # expose as external CP
      virtual_link: [ Cp_vaaa_onap_private, virtual_link ] # expose as external CP
      virtual_link: [ Cp_vdns_public, virtual_link ]
      virtual_link: [ Cp_vdns_onap_private, virtual_link ]
      virtual_link: [ Cp_vdhcp_public, virtual_link ]
      virtual_link: [ Cp_vdhcp_onap_private, virtual_link ]
      virtual_link: [ Cp_vweb_public, virtual_link ]
      virtual_link: [ Cp_vweb_onap_private, virtual_link ]

  inputs:
    vcpe_image_name:
      type: string
      description: image name for vcpe in openstack glance
      default: ubuntu_16.04
    #public_net_id:
    #  type: string
    #  description: public network id used during onap installation
    #onap_private_net_id:
    #  type: string
    #  description: onap OAM network id
    onap_private_net_cidr:
      type: string
      description: oanp OAM network cidr
      default: 10.0.0.0/16
    mr_ip_addr:
      type: string
      description: message router ip that for vDHCP configuration 
      default: 10.0.11.1
    dcae_collector_ip:
      type: string
      description: dcae collector ip
      default: 10.0.4.102
    dcae_collector_port:
      type: integer
      description: dcae collector port
      default: 8080
    repo_url_blob:
      type: string
      description: url of the repo hosting demo package 
      default: https://nexus.onap.org/content/sites/raw
    repo_url_artifacts:
      type: string
      description: url of the repo hosting demo package artifacts
      default: https://nexus.onap.org/content/groups/staging
    demo_artifacts_version:
      type: string
      description: artifacts version used in demo vnfs
      default: 1.2.0
    install_script_version:
      type: string
      description: install script version number
      default: 1.2.0-SNAPSHOT
    cloud_env:
      type: string
      description: cloud environment(openstack or rackspace)
      default: openstack
    pub_key:
      type: string
      description: ssh public key
      default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGx6SKrAuCz1V8KGevZueksLdWoPWJP6z3r29Z7TmPVEOjM+7PIPeSs2BVRx3rnHZBAlasMrZ+fJBS25ts9vfC+ItezQah/hr9vrkmwxCR54Lb84poW+sToPeF6i5eZY7W+jWJfLaFSFx9d2vp4zes/fOlT3NvYCXbn/3QdryQoGl7VFI8oemZypVcikZXElJeeKgAVdSwnrzuqtO/tmbXcAeSbYvVjki8ywYcsWMVMYWUWhh+1BAB6kXnTsIWqzrq0Pfvy+81WDwtiqsqmd93HY8hE0scBrXFBZzQS/AYfIFBlEuFNdLczchntjbZ0n7dmDXk8zHtCZYNk7kwb8k/ lulianhao@llu-nuc1
    cpe_signal_net_id:
      type: string
      description: cpe signal net name
      default: zdfw1cpe01_private
    cpe_signal_net_cidr:
      type: string
      description: cpe signal net cidr
      default: 10.4.0.0/24
    cpe_public_net_id:
      type: string
      description: cpe public net name
      default: zdfw1cpe01_public
    cpe_public_net_cidr:
      type: string
      description: cpe public net cidr
      default: 10.2.0.0/24
    vdhcp_name_0:
      type: string
      description: vdu vdhcp_0 name
      default: zdcpe1cpe01dhcp01
    vdhcp_private_ip_0:
      type: string
      description: ip of vdhcp port to cpe signal net 
      default: 10.4.0.1
    vdhcp_private_ip_1:
      type: string
      description: ip of vdhcp port to onap oam net 
      default: 10.0.101.1
    vaaa_name_0:
      type: string
      description: vdu vaaa_0 name
      default: zdcpe1cpe01aaa01
    vaaa_private_ip_0:
      type: string
      description: ip of vaaa port to cpe signal net 
      default: 10.4.0.4
    vaaa_private_ip_1:
      type: string
      description: ip of vaaa port to onap oam net 
      default: 10.0.101.2
    vdns_name_0:
      type: string
      description: vdu vdns_0 name
      default: zdcpe1cpe01dns01
    vdns_private_ip_0:
      type: string
      description: ip of vdns port to cpe public net 
      default: 10.2.0.1
    vdns_private_ip_1:
      type: string
      description: ip of vdns port to onap oam net 
      default: 10.0.101.3
    vweb_name_0:
      type: string
      description: vdu vweb_0 name
      default: zdcpe1cpe01web01
    vweb_private_ip_0:
      type: string
      description: ip of vweb port to cpe public net 
      default: 10.2.0.10
    vweb_private_ip_1:
      type: string
      description: ip of vweb port to onap oam net 
      default: 10.0.101.40
    vnf_id:
      type: string
      description: The VNF ID is provided by ONAP
      default: vCPE_Infrastructure_demo_app
    vf_module_id:
      type: string
      description: The vCPE Module ID is provided by ONAP
      default: vCPE_Intrastructure
    
  node_templates:
    #onap public net
    #VL_public:
    #  type: tosca.nodes.nfv.VnfVirtualLink
    #  properties:
    #    connectivity_type:
    #      layer_protocol: ipv4
    #    vl_profile:
    #      max_bit_rate_requirements:
    #        root: 10000000
    #        leaf: 10000000
    #      min_bit_rate_requirements:
    #        root: 10000000
    #        leaf: 10000000
    #      networkName: { get_input: public_net_id }

    #onap oam net
    #VL_onap_private:
    #  type: tosca.nodes.nfv.VnfVirtualLink
    #  properties:
    #    connectivity_type:
    #      layer_protocol: ipv4
    #    vl_profile:
    #      max_bit_rate_requirements:
    #        root: 10000000
    #        leaf: 10000000
    #      min_bit_rate_requirements:
    #        root: 10000000
    #        leaf: 10000000
    #      networkName: { get_input: onap_private_net_id }
    #      cidr: { get_input: onap_private_net_cidr }

    #cpe signal network
    VL_cpe_signal:
      type: tosca.nodes.nfv.VnfVirtualLink
      properties:
        connectivity_type:
          layer_protocol: ipv4
        vl_profile:
          max_bit_rate_requirements:
            root: 10000000
            leaf: 10000000
          min_bit_rate_requirements:
            root: 10000000
            leaf: 10000000
          networkName: { get_input: cpe_signal_net_id}
          cidr: { get_input: cpe_signal_net_cidr }
          dhcpEnabled: false
 
    #cpe public network
    VL_cpe_public:
      type: tosca.nodes.nfv.VnfVirtualLink
      properties:
        connectivity_type:
          layer_protocol: ipv4
        vl_profile:
          max_bit_rate_requirements:
            root: 10000000
            leaf: 10000000
          min_bit_rate_requirements:
            root: 10000000
            leaf: 10000000
          networkName: { get_input: cpe_public_net_id}
          cidr: { get_input: cpe_public_net_cidr }
          dhcpEnabled: false

    # vaaa related
    Cp_vaaa_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
      requirements:
        - virtual_binding: VDU_vaaa_0
        #- virtual_link: VL_public

    Cp_vaaa_onap_private:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vaaa_private_ip_1 }
      requirements:
        - virtual_binding: VDU_vaaa_0
        #- virtual_link: VL_onap_private

    Cp_vaaa_cpe_signal:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vaaa_private_ip_0 }
      requirements:
        - virtual_binding: VDU_vaaa_0
        - virtual_link: VL_cpe_signal

    VirtualStorage_root_all:
      # this indicate the VDU root storage size 
      type: tosca.nodes.nfv.Vdu.VirtualStorage
      properties:
        type_of_storage: root
        size_of_storage: 40 GB

    VDU_vaaa_0:
      type: tosca.nodes.nfv.Vdu.Compute
      properties:
        name: { get_input: vaaa_name_0 }
        description: vaaa
        configurable_properties: 
          additional_vnfc_configurable_properties: {}
        vdu_profile:
          min_number_of_instances: 1
          max_number_of_instances: 1
          watchdog: none
        inject_files:
          - source_path: artifacts/keys/authorized_keys #SSH authorized_keys
            dest_path: /home/ubuntu/.ssh/authorized_keys
        meta_data:
          vnf_id: { get_input: vnf_id }
          vf_module_id: { get_input: vf_module_id }
        user_data: { concat: ["#!/bin/bash\n",
                              "mkdir /opt/config\n",
                              "echo \"", {get_input: dcae_collector_ip}, "\" > /opt/config/dcae_collector_ip.txt\n",
                              "echo \"", {get_input: dcae_collector_port}, "\" > /opt/config/dcae_collector_port.txt\n",
                              "echo \"", {get_input: vaaa_private_ip_0}, "\" > /opt/config/cpe_signal_net_ipaddr.txt\n",
                              "echo \"", {get_input: vaaa_private_ip_1}, "\" > /opt/config/oam_ipaddr.txt\n",
                              "echo \"", {get_input: onap_private_net_cidr}, "\" > /opt/config/oam_cidr.txt\n",
                              "echo \"", {get_input: cpe_signal_net_cidr}, "\" > /opt/config/cpe_signal_net_cidr.txt\n",
                              "echo \"", {get_input: repo_url_blob}, "\" > /opt/config/repo_url_blob.txt\n",
                              "echo \"", {get_input: repo_url_artifacts}, "\" > /opt/config/repo_url_artifacts.txt\n",
                              "echo \"", {get_input: demo_artifacts_version}, "\" > /opt/config/demo_artifacts_version.txt\n",
                              "echo \"", {get_input: install_script_version}, "\" > /opt/config/install_script_version.txt\n",
                              "echo \"", {get_input: cloud_env}, "\" > /opt/config/cloud_env.txt\n",
                              "curl -k ", {get_input: repo_url_blob}, "/org.onap.demo/vnfs/vcpe/", {get_input: install_script_version}, "/v_aaa_install.sh -o /opt/v_aaa_install.sh\n",
                              "cd /opt\n",
                              "chmod +x v_aaa_install.sh\n",
                              "./v_aaa_install.sh\n",
                             ]
                   }
      capabilities:
        virtual_compute:
          properties:
            #TODO add local disk size
            virtual_memory:
              virtual_mem_size: 4096 MB
            virtual_cpu:
              num_virtual_cpu: 2     
      requirements:
        - virtual_storage: VirtualStorage_root_all
      artifacts:
        sw_image: #TODO need to put glance image name here
          #file: { get_input: vcpe_image_name }
          file: ubuntu_16.04
          type: tosca.artifacts.nfv.SwImage

    # vdns related
    Cp_vdns_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
      requirements:
        - virtual_binding: VDU_vdns_0
        #- virtual_link: VL_public

    Cp_vdns_onap_private:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vdns_private_ip_1 }
      requirements:
        - virtual_binding: VDU_vdns_0
        #- virtual_link: VL_onap_private

    Cp_vdns_cpe_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vdns_private_ip_0 }
      requirements:
        - virtual_binding: VDU_vdns_0
        - virtual_link: VL_cpe_public

    VDU_vdns_0:
      type: tosca.nodes.nfv.Vdu.Compute
      properties:
        name: { get_input: vdns_name_0 }
        description: vdns
        configurable_properties: 
          additional_vnfc_configurable_properties: {}
        vdu_profile:
          min_number_of_instances: 1
          max_number_of_instances: 1
          watchdog: none
        inject_files:
          - source_path: artifacts/keys/authorized_keys #SSH authorized_keys
            dest_path: /home/ubuntu/.ssh/authorized_keys
        meta_data:
          vnf_id: { get_input: vnf_id }
          vf_module_id: { get_input: vf_module_id }
        user_data: { concat: ["#!/bin/bash\n",
                              "mkdir /opt/config\n",
                              "echo \"", {get_input: vdns_private_ip_1}, "\" > /opt/config/oam_ipaddr.txt\n",
                              "echo \"", {get_input: vdns_private_ip_0}, "\" > /opt/config/cpe_public_net_ipaddr.txt\n",
                              "echo \"", {get_input: onap_private_net_cidr}, "\" > /opt/config/oam_cidr.txt\n",
                              "echo \"", {get_input: cpe_public_net_cidr}, "\" > /opt/config/cpe_public_net_cidr.txt\n",
                              "echo \"", {get_input: repo_url_blob}, "\" > /opt/config/repo_url_blob.txt\n",
                              "echo \"", {get_input: repo_url_artifacts}, "\" > /opt/config/repo_url_artifacts.txt\n",
                              "echo \"", {get_input: demo_artifacts_version}, "\" > /opt/config/demo_artifacts_version.txt\n",
                              "echo \"", {get_input: install_script_version}, "\" > /opt/config/install_script_version.txt\n",
                              "echo \"", {get_input: cloud_env}, "\" > /opt/config/cloud_env.txt\n",
                              "\n",
                              "# Download and run install script\n",
                              "curl -k ", {get_input: repo_url_blob}, "/org.onap.demo/vnfs/vcpe/", {get_input: install_script_version}, "/v_dns_install.sh -o /opt/v_dns_install.sh\n",
                              "cd /opt\n",
                              "chmod +x v_dns_install.sh\n",
                              "./v_dns_install.sh\n",
                             ]
                   }
      capabilities:
        virtual_compute:
          properties:
            #TODO add local disk size
            virtual_memory:
              virtual_mem_size: 4096 MB
            virtual_cpu:
              num_virtual_cpu: 2
      requirements:
        - virtual_storage: VirtualStorage_root_all
      artifacts:
        sw_image: #TODO need to put glance image name here
          #file: { get_input: vcpe_image_name }
          file: ubuntu_16.04
          type: tosca.artifacts.nfv.SwImage

    # vdhcp related
    Cp_vdhcp_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
      requirements:
        - virtual_binding: VDU_vdhcp_0
        #- virtual_link: VL_public

    Cp_vdhcp_onap_private:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vdhcp_private_ip_1 }
      requirements:
        - virtual_binding: VDU_vdhcp_0
        #- virtual_link: VL_onap_private

    Cp_vdhcp_cpe_signal:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vdhcp_private_ip_0 }
      requirements:
        - virtual_binding: VDU_vdhcp_0
        - virtual_link: VL_cpe_signal

    VDU_vdhcp_0:
      type: tosca.nodes.nfv.Vdu.Compute
      properties:
        name: { get_input: vdhcp_name_0 }
        description: vdhcp
        configurable_properties: 
          additional_vnfc_configurable_properties: {}
        vdu_profile:
          min_number_of_instances: 1
          max_number_of_instances: 1
          watchdog: none
        inject_files:
          - source_path: artifacts/keys/authorized_keys #SSH authorized_keys
            dest_path: /home/ubuntu/.ssh/authorized_keys
        meta_data:
          vnf_id: { get_input: vnf_id }
          vf_module_id: { get_input: vf_module_id }
        user_data: { concat: ["#!/bin/bash\n",
                              "mkdir /opt/config\n",
                              "echo \"", {get_input: vdhcp_private_ip_1}, "\" > /opt/config/oam_ipaddr.txt\n",
                              "echo \"", {get_input: vdhcp_private_ip_0}, "\" > /opt/config/cpe_signal_ipaddr.txt\n",
                              "echo \"", {get_input: onap_private_net_cidr}, "\" > /opt/config/oam_cidr.txt\n",
                              "echo \"", {get_input: cpe_signal_net_cidr}, "\" > /opt/config/cpe_signal_net_cidr.txt\n",
                              "echo \"", {get_input: mr_ip_addr}, "\" > /opt/config/mr_ip_addr.txt\n",
                              "echo \"", {get_input: repo_url_blob}, "\" > /opt/config/repo_url_blob.txt\n",
                              "echo \"", {get_input: repo_url_artifacts}, "\" > /opt/config/repo_url_artifacts.txt\n",
                              "echo \"", {get_input: demo_artifacts_version}, "\" > /opt/config/demo_artifacts_version.txt\n",
                              "echo \"", {get_input: install_script_version}, "\" > /opt/config/install_script_version.txt\n",
                              "echo \"", {get_input: cloud_env}, "\" > /opt/config/cloud_env.txt\n",
                              "curl -k ", {get_input: repo_url_blob}, "/org.onap.demo/vnfs/vcpe/", {get_input: install_script_version}, "/v_dhcp_install.sh -o /opt/v_dhcp_install.sh\n",
                              "cd /opt\n",
                              "chmod +x v_dhcp_install.sh\n",
                              "./v_dhcp_install.sh\n",
                             ]
                   }
      capabilities:
        virtual_compute:
          properties:
            #TODO add local disk size
            virtual_memory:
              virtual_mem_size: 4096 MB
            virtual_cpu:
              num_virtual_cpu: 2
      requirements:
        - virtual_storage: VirtualStorage_root_all
      artifacts:
        sw_image: #TODO need to put glance image name here
          #file: { get_input: vcpe_image_name }
          file: ubuntu_16.04
          type: tosca.artifacts.nfv.SwImage

    # vweb related
    Cp_vweb_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
      requirements:
        - virtual_binding: VDU_vweb_0
        #- virtual_link: VL_public

    Cp_vweb_onap_private:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vweb_private_ip_1 }
      requirements:
        - virtual_binding: VDU_vweb_0
        #- virtual_link: VL_onap_private

    Cp_vweb_cpe_public:
      type: tosca.nodes.nfv.VduCp
      properties:
        layer_protocol: [ipv4]
        trunk_mode: false
        protocol_data:
          - asscociated_layer_protocol: ipv4
            address_data:
              address_type: ip_address
              l3_address_data:
                ip_address_assignment: false
                floating_ip_activated: false
                fixed_ip_address:
                  - { get_input: vweb_private_ip_0 }
      requirements:
        - virtual_binding: VDU_vweb_0
        - virtual_link: VL_cpe_public

    VDU_vweb_0:
      type: tosca.nodes.nfv.Vdu.Compute
      properties:
        name: { get_input: vweb_name_0 }
        description: vweb
        configurable_properties: 
          additional_vnfc_configurable_properties: {}
        vdu_profile:
          min_number_of_instances: 1
          max_number_of_instances: 1
          watchdog: none
        inject_files:
          - source_path: artifacts/keys/authorized_keys #SSH authorized_keys
            dest_path: /home/ubuntu/.ssh/authorized_keys
        meta_data:
          vnf_id: { get_input: vnf_id }
          vf_module_id: { get_input: vf_module_id }
        user_data: { concat: ["#!/bin/bash\n",
                              "mkdir /opt/config\n",
                              "echo \"", {get_input: vweb_private_ip_1}, "\" > /opt/config/oam_ipaddr.txt\n",
                              "echo \"", {get_input: vweb_private_ip_0}, "\" > /opt/config/cpe_public_ipaddr.txt\n",
                              "echo \"", {get_input: onap_private_net_cidr}, "\" > /opt/config/oam_cidr.txt\n",
                              "echo \"", {get_input: cpe_public_net_cidr}, "\" > /opt/config/cpe_public_net_cidr.txt\n",
                              "echo \"", {get_input: repo_url_blob}, "\" > /opt/config/repo_url_blob.txt\n",
                              "echo \"", {get_input: repo_url_artifacts}, "\" > /opt/config/repo_url_artifacts.txt\n",
                              "echo \"", {get_input: demo_artifacts_version}, "\" > /opt/config/demo_artifacts_version.txt\n",
                              "echo \"", {get_input: install_script_version}, "\" > /opt/config/install_script_version.txt\n",
                              "echo \"", {get_input: cloud_env}, "\" > /opt/config/cloud_env.txt\n",
                              "curl -k ", {get_input: repo_url_blob}, "/org.onap.demo/vnfs/vcpe/", {get_input: install_script_version}, "/v_web_install.sh -o /opt/v_web_install.sh\n",
                              "cd /opt\n",
                              "chmod +x v_web_install.sh\n",
                              "./v_web_install.sh\n",
                             ]
                   }
      capabilities:
        virtual_compute:
          properties:
            #TODO add local disk size
            virtual_memory:
              virtual_mem_size: 4096 MB
            virtual_cpu:
              num_virtual_cpu: 2
      requirements:
        - virtual_storage: VirtualStorage_root_all
      artifacts:
        sw_image: #TODO need to put glance image name here
          #file: { get_input: vcpe_image_name }
          file: ubuntu_16.04
          type: tosca.artifacts.nfv.SwImage

